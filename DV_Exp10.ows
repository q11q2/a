<?xml version='1.0' encoding='utf-8'?>
<scheme version="2.0" title="" description="">
	<nodes>
		<node id="0" name="File" qualified_name="Orange.widgets.data.owfile.OWFile" project_name="Orange3" version="" title="File" position="(150, 150)" />
		<node id="1" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script" position="(300, 150)" />
		<node id="2" name="File" qualified_name="Orange.widgets.data.owfile.OWFile" project_name="Orange3" version="" title="File (1)" position="(153.0, 314.0)" />
		<node id="3" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (1)" position="(303.0, 314.0)" />
		<node id="4" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table" position="(453.0, 314.0)" />
		<node id="5" name="Scatter Plot" qualified_name="Orange.widgets.visualize.owscatterplot.OWScatterPlot" project_name="Orange3" version="" title="Scatter Plot" position="(442.0, 152.0)" />
	</nodes>
	<links>
		<link id="0" source_node_id="0" sink_node_id="1" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="1" source_node_id="2" sink_node_id="3" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="2" source_node_id="3" sink_node_id="4" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="3" source_node_id="1" sink_node_id="5" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
	</links>
	<annotations />
	<thumbnail />
	<node_properties>
		<properties node_id="0" format="pickle">gASVLAwAAAAAAAB9lCiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjAxyZWNlbnRfcGF0aHOUXZQojB5v
cmFuZ2V3aWRnZXQudXRpbHMuZmlsZWRpYWxvZ3OUjApSZWNlbnRQYXRolJOUKYGUfZQojAdhYnNw
YXRolIwpQzovVXNlcnMvdGhlb2YvRG93bmxvYWRzL3N0dWRlbnQtZGF0YS5jc3aUjAZwcmVmaXiU
TowHcmVscGF0aJROjAV0aXRsZZSMAJSMBXNoZWV0lGgOjAtmaWxlX2Zvcm1hdJSMGE9yYW5nZS5k
YXRhLmlvLkNTVlJlYWRlcpR1YmgGKYGUfZQoaAmMV0M6L1VzZXJzL3RoZW9mL0FwcERhdGEvTG9j
YWwvUHJvZ3JhbXMvT3JhbmdlL0xpYi9zaXRlLXBhY2thZ2VzL09yYW5nZS9kYXRhc2V0cy9pcmlz
LnRhYpRoC4wPc2FtcGxlLWRhdGFzZXRzlGgMjAhpcmlzLnRhYpRoDWgOaA9oDmgQTnViaAYpgZR9
lChoCYxaQzovVXNlcnMvdGhlb2YvQXBwRGF0YS9Mb2NhbC9Qcm9ncmFtcy9PcmFuZ2UvTGliL3Np
dGUtcGFja2FnZXMvT3JhbmdlL2RhdGFzZXRzL3RpdGFuaWMudGFilGgLaBVoDIwLdGl0YW5pYy50
YWKUaA1oDmgPaA5oEE51YmgGKYGUfZQoaAmMWkM6L1VzZXJzL3RoZW9mL0FwcERhdGEvTG9jYWwv
UHJvZ3JhbXMvT3JhbmdlL0xpYi9zaXRlLXBhY2thZ2VzL09yYW5nZS9kYXRhc2V0cy9ob3VzaW5n
LnRhYpRoC2gVaAyMC2hvdXNpbmcudGFilGgNaA5oD2gOaBBOdWJoBimBlH2UKGgJjGBDOi9Vc2Vy
cy90aGVvZi9BcHBEYXRhL0xvY2FsL1Byb2dyYW1zL09yYW5nZS9MaWIvc2l0ZS1wYWNrYWdlcy9P
cmFuZ2UvZGF0YXNldHMvaGVhcnRfZGlzZWFzZS50YWKUaAtoFWgMjBFoZWFydF9kaXNlYXNlLnRh
YpRoDWgOaA9oDmgQTnViaAYpgZR9lChoCYxhQzovVXNlcnMvdGhlb2YvQXBwRGF0YS9Mb2NhbC9Q
cm9ncmFtcy9PcmFuZ2UvTGliL3NpdGUtcGFja2FnZXMvT3JhbmdlL2RhdGFzZXRzL2Jyb3duLXNl
bGVjdGVkLnRhYpRoC2gVaAyMEmJyb3duLXNlbGVjdGVkLnRhYpRoDWgOaA9oDmgQTnViaAYpgZR9
lChoCYxWQzovVXNlcnMvdGhlb2YvQXBwRGF0YS9Mb2NhbC9Qcm9ncmFtcy9PcmFuZ2UvTGliL3Np
dGUtcGFja2FnZXMvT3JhbmdlL2RhdGFzZXRzL3pvby50YWKUaAtoFWgMjAd6b28udGFilGgNaA5o
D2gOaBBOdWJljAtyZWNlbnRfdXJsc5RdlIwTc2F2ZWRXaWRnZXRHZW9tZXRyeZRDQgHZ0MsAAwAA
AAAB0wAAAG0AAAQsAAAC1gAAAdQAAACLAAAEKwAAAtUAAAAAAAAAAAYAAAAB1AAAAIsAAAQrAAAC
1ZSMC3NoZWV0X25hbWVzlH2UjAZzb3VyY2WUSwCMA3VybJRoDowNZG9tYWluX2VkaXRvcpR9lIwL
X192ZXJzaW9uX1+USwGMEGNvbnRleHRfc2V0dGluZ3OUXZSMFW9yYW5nZXdpZGdldC5zZXR0aW5n
c5SMB0NvbnRleHSUk5QpgZR9lCiMBnZhbHVlc5R9lCiMCXZhcmlhYmxlc5RdlGgzfZRoP12UKF2U
KIwGc2Nob29slIwUT3JhbmdlLmRhdGEudmFyaWFibGWUjBBEaXNjcmV0ZVZhcmlhYmxllJOUSwCM
BkdQLCBNU5SJZV2UKIwDc2V4lGhHSwCMBEYsIE2UiWVdlCiMA2FnZZRoRYwSQ29udGludW91c1Zh
cmlhYmxllJOUSwBoDohlXZQojAdhZGRyZXNzlGhHSwCMBFIsIFWUiWVdlCiMB2ZhbXNpemWUaEdL
AIwIR1QzLCBMRTOUiWVdlCiMB1BzdGF0dXOUaEdLAIwEQSwgVJSJZV2UKIwETWVkdZRoT0sAaA6I
ZV2UKIwERmVkdZRoT0sAaA6IZV2UKIwETWpvYpRoR0sAjClhdF9ob21lLCBoZWFsdGgsIG90aGVy
LCBzZXJ2aWNlcywgdGVhY2hlcpSJZV2UKIwERmpvYpRoR0sAjClhdF9ob21lLCBoZWFsdGgsIG90
aGVyLCBzZXJ2aWNlcywgdGVhY2hlcpSJZV2UKIwGcmVhc29ulGhHSwCMH2NvdXJzZSwgaG9tZSwg
b3RoZXIsIHJlcHV0YXRpb26UiWVdlCiMCGd1YXJkaWFulGhHSwCMFWZhdGhlciwgbW90aGVyLCBv
dGhlcpSJZV2UKIwKdHJhdmVsdGltZZRoT0sAaA6IZV2UKIwJc3R1ZHl0aW1llGhPSwBoDohlXZQo
jAhmYWlsdXJlc5RoT0sAaA6IZV2UKIwJc2Nob29sc3VwlGhHSwCMB25vLCB5ZXOUiWVdlCiMBmZh
bXN1cJRoR0sAjAdubywgeWVzlIllXZQojARwYWlklGhHSwCMB25vLCB5ZXOUiWVdlCiMCmFjdGl2
aXRpZXOUaEdLAIwHbm8sIHllc5SJZV2UKIwHbnVyc2VyeZRoR0sAjAdubywgeWVzlIllXZQojAZo
aWdoZXKUaEdLAIwHbm8sIHllc5SJZV2UKIwIaW50ZXJuZXSUaEdLAIwHbm8sIHllc5SJZV2UKIwI
cm9tYW50aWOUaEdLAIwHbm8sIHllc5SJZV2UKIwGZmFtcmVslGhPSwBoDohlXZQojAhmcmVldGlt
ZZRoT0sAaA6IZV2UKIwFZ29vdXSUaE9LAGgOiGVdlCiMBERhbGOUaE9LAGgOiGVdlCiMBFdhbGOU
aE9LAGgOiGVdlCiMBmhlYWx0aJRoT0sAaA6IZV2UKIwIYWJzZW5jZXOUaE9LAGgOiGVdlCiMBnBh
c3NlZJRoR0sAjAdubywgeWVzlIllZXNoNUsBdYwKYXR0cmlidXRlc5QojAZzY2hvb2yUXZQojAJH
UJSMAk1TlGWGlIwDc2V4lF2UKIwBRpSMAU2UZYaUjANhZ2WUSwKGlIwHYWRkcmVzc5RdlCiMAVKU
jAFVlGWGlIwHZmFtc2l6ZZRdlCiMA0dUM5SMA0xFM5RlhpSMB1BzdGF0dXOUXZQojAFBlIwBVJRl
hpSMBE1lZHWUSwKGlIwERmVkdZRLAoaUjARNam9ilF2UKIwHYXRfaG9tZZSMBmhlYWx0aJSMBW90
aGVylIwIc2VydmljZXOUjAd0ZWFjaGVylGWGlIwERmpvYpRdlCiMB2F0X2hvbWWUjAZoZWFsdGiU
jAVvdGhlcpSMCHNlcnZpY2VzlIwHdGVhY2hlcpRlhpSMBnJlYXNvbpRdlCiMBmNvdXJzZZSMBGhv
bWWUjAVvdGhlcpSMCnJlcHV0YXRpb26UZYaUjAhndWFyZGlhbpRdlCiMBmZhdGhlcpSMBm1vdGhl
cpSMBW90aGVylGWGlIwKdHJhdmVsdGltZZRLAoaUjAlzdHVkeXRpbWWUSwKGlIwIZmFpbHVyZXOU
SwKGlIwJc2Nob29sc3VwlF2UKIwCbm+UjAN5ZXOUZYaUjAZmYW1zdXCUXZQojAJub5SMA3llc5Rl
hpSMBHBhaWSUXZQojAJub5SMA3llc5RlhpSMCmFjdGl2aXRpZXOUXZQojAJub5SMA3llc5RlhpSM
B251cnNlcnmUXZQojAJub5SMA3llc5RlhpSMBmhpZ2hlcpRdlCiMAm5vlIwDeWVzlGWGlIwIaW50
ZXJuZXSUXZQojAJub5SMA3llc5RlhpSMCHJvbWFudGljlF2UKIwCbm+UjAN5ZXOUZYaUjAZmYW1y
ZWyUSwKGlIwIZnJlZXRpbWWUSwKGlIwFZ29vdXSUSwKGlIwERGFsY5RLAoaUjARXYWxjlEsChpSM
BmhlYWx0aJRLAoaUjAhhYnNlbmNlc5RLAoaUjAZwYXNzZWSUXZQojAJub5SMA3llc5RlhpR0lIwF
bWV0YXOUKYwKY2xhc3NfdmFyc5QpjBJtb2RpZmllZF92YXJpYWJsZXOUXZR1YmF1Lg==
</properties>
		<properties node_id="1" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01o\x00\x00\x00r\x00\x00\x04\x90\x00\x00\x02\xd0\x00\x00\x01p\x00\x00\x00\x90\x00\x00\x04\x8f\x00\x00\x02\xcf\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x01p\x00\x00\x00\x90\x00\x00\x04\x8f\x00\x00\x02\xcf', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import numpy as np\nfrom Orange.data import Table, Domain, ContinuousVariable, DiscreteVariable\n\ndomain = Domain([ContinuousVariable("age"),\n                 ContinuousVariable("height"),\n                 DiscreteVariable("gender", values=("M", "F"))])\narr = np.array([\n  [25, 186, 0],\n  [30, 164, 1]])\nout_data = Table.from_numpy(domain, arr)\n', 'filename': None}], 'scriptText': 'import numpy as np\nimport pandas as pd\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\n\n# Create a sample Student dataset\ndata = {\n    \'Name\': [\'John\', \'Priya\', \'Alex\', \'Meena\', \'Rahul\', \'Sara\', \'David\', \'Kavya\', \'Vikram\', \'Anita\'],\n    \'Age\': [18, 17, 18, 19, 17, 18, 19, 17, 18, 19],\n    \'Gender\': [\'Male\', \'Female\', \'Male\', \'Female\', \'Male\', \'Female\', \'Male\', \'Female\', \'Male\', \'Female\'],\n    \'Math_Score\': np.random.randint(50, 100, size=10),\n    \'Science_Score\': np.random.randint(45, 95, size=10),\n    \'English_Score\': np.random.randint(55, 100, size=10)\n}\n\n# Create DataFrame\ndf = pd.DataFrame(data)\n\n# Calculate average\ndf[\'Average\'] = df[[\'Math_Score\', \'Science_Score\', \'English_Score\']].mean(axis=1)\n\n# Define Orange domain\ndomain = Domain([\n    ContinuousVariable("Age"),\n    ContinuousVariable("Math_Score"),\n    ContinuousVariable("Science_Score"),\n    ContinuousVariable("English_Score"),\n    ContinuousVariable("Average")\n], metas=[StringVariable("Name"), StringVariable("Gender")])\n\n# Convert to Orange Table\nout_data = Table.from_numpy(domain, df[[\'Age\',\'Math_Score\',\'Science_Score\',\'English_Score\',\'Average\']].to_numpy(),\n                            metas=df[[\'Name\',\'Gender\']].to_numpy())\n\nprint("Data sent to Scatter Plot successfully!")\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xa1\x00\x00\x00a\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="2" format="pickle">gASVLAwAAAAAAAB9lCiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjAxyZWNlbnRfcGF0aHOUXZQojB5v
cmFuZ2V3aWRnZXQudXRpbHMuZmlsZWRpYWxvZ3OUjApSZWNlbnRQYXRolJOUKYGUfZQojAdhYnNw
YXRolIwpQzovVXNlcnMvdGhlb2YvRG93bmxvYWRzL3N0dWRlbnQtZGF0YS5jc3aUjAZwcmVmaXiU
TowHcmVscGF0aJROjAV0aXRsZZSMAJSMBXNoZWV0lGgOjAtmaWxlX2Zvcm1hdJSMGE9yYW5nZS5k
YXRhLmlvLkNTVlJlYWRlcpR1YmgGKYGUfZQoaAmMV0M6L1VzZXJzL3RoZW9mL0FwcERhdGEvTG9j
YWwvUHJvZ3JhbXMvT3JhbmdlL0xpYi9zaXRlLXBhY2thZ2VzL09yYW5nZS9kYXRhc2V0cy9pcmlz
LnRhYpRoC4wPc2FtcGxlLWRhdGFzZXRzlGgMjAhpcmlzLnRhYpRoDWgOaA9oDmgQTnViaAYpgZR9
lChoCYxaQzovVXNlcnMvdGhlb2YvQXBwRGF0YS9Mb2NhbC9Qcm9ncmFtcy9PcmFuZ2UvTGliL3Np
dGUtcGFja2FnZXMvT3JhbmdlL2RhdGFzZXRzL3RpdGFuaWMudGFilGgLaBVoDIwLdGl0YW5pYy50
YWKUaA1oDmgPaA5oEE51YmgGKYGUfZQoaAmMWkM6L1VzZXJzL3RoZW9mL0FwcERhdGEvTG9jYWwv
UHJvZ3JhbXMvT3JhbmdlL0xpYi9zaXRlLXBhY2thZ2VzL09yYW5nZS9kYXRhc2V0cy9ob3VzaW5n
LnRhYpRoC2gVaAyMC2hvdXNpbmcudGFilGgNaA5oD2gOaBBOdWJoBimBlH2UKGgJjGBDOi9Vc2Vy
cy90aGVvZi9BcHBEYXRhL0xvY2FsL1Byb2dyYW1zL09yYW5nZS9MaWIvc2l0ZS1wYWNrYWdlcy9P
cmFuZ2UvZGF0YXNldHMvaGVhcnRfZGlzZWFzZS50YWKUaAtoFWgMjBFoZWFydF9kaXNlYXNlLnRh
YpRoDWgOaA9oDmgQTnViaAYpgZR9lChoCYxhQzovVXNlcnMvdGhlb2YvQXBwRGF0YS9Mb2NhbC9Q
cm9ncmFtcy9PcmFuZ2UvTGliL3NpdGUtcGFja2FnZXMvT3JhbmdlL2RhdGFzZXRzL2Jyb3duLXNl
bGVjdGVkLnRhYpRoC2gVaAyMEmJyb3duLXNlbGVjdGVkLnRhYpRoDWgOaA9oDmgQTnViaAYpgZR9
lChoCYxWQzovVXNlcnMvdGhlb2YvQXBwRGF0YS9Mb2NhbC9Qcm9ncmFtcy9PcmFuZ2UvTGliL3Np
dGUtcGFja2FnZXMvT3JhbmdlL2RhdGFzZXRzL3pvby50YWKUaAtoFWgMjAd6b28udGFilGgNaA5o
D2gOaBBOdWJljAtyZWNlbnRfdXJsc5RdlIwTc2F2ZWRXaWRnZXRHZW9tZXRyeZRDQgHZ0MsAAwAA
AAAB0wAAAG0AAAQsAAAC1gAAAdQAAACLAAAEKwAAAtUAAAAAAAAAAAYAAAAB1AAAAIsAAAQrAAAC
1ZSMC3NoZWV0X25hbWVzlH2UjAZzb3VyY2WUSwCMA3VybJRoDowNZG9tYWluX2VkaXRvcpR9lIwL
X192ZXJzaW9uX1+USwGMEGNvbnRleHRfc2V0dGluZ3OUXZSMFW9yYW5nZXdpZGdldC5zZXR0aW5n
c5SMB0NvbnRleHSUk5QpgZR9lCiMBnZhbHVlc5R9lCiMCXZhcmlhYmxlc5RdlGgzfZRoP12UKF2U
KIwGc2Nob29slIwUT3JhbmdlLmRhdGEudmFyaWFibGWUjBBEaXNjcmV0ZVZhcmlhYmxllJOUSwCM
BkdQLCBNU5SJZV2UKIwDc2V4lGhHSwCMBEYsIE2UiWVdlCiMA2FnZZRoRYwSQ29udGludW91c1Zh
cmlhYmxllJOUSwBoDohlXZQojAdhZGRyZXNzlGhHSwCMBFIsIFWUiWVdlCiMB2ZhbXNpemWUaEdL
AIwIR1QzLCBMRTOUiWVdlCiMB1BzdGF0dXOUaEdLAIwEQSwgVJSJZV2UKIwETWVkdZRoT0sAaA6I
ZV2UKIwERmVkdZRoT0sAaA6IZV2UKIwETWpvYpRoR0sAjClhdF9ob21lLCBoZWFsdGgsIG90aGVy
LCBzZXJ2aWNlcywgdGVhY2hlcpSJZV2UKIwERmpvYpRoR0sAjClhdF9ob21lLCBoZWFsdGgsIG90
aGVyLCBzZXJ2aWNlcywgdGVhY2hlcpSJZV2UKIwGcmVhc29ulGhHSwCMH2NvdXJzZSwgaG9tZSwg
b3RoZXIsIHJlcHV0YXRpb26UiWVdlCiMCGd1YXJkaWFulGhHSwCMFWZhdGhlciwgbW90aGVyLCBv
dGhlcpSJZV2UKIwKdHJhdmVsdGltZZRoT0sAaA6IZV2UKIwJc3R1ZHl0aW1llGhPSwBoDohlXZQo
jAhmYWlsdXJlc5RoT0sAaA6IZV2UKIwJc2Nob29sc3VwlGhHSwCMB25vLCB5ZXOUiWVdlCiMBmZh
bXN1cJRoR0sAjAdubywgeWVzlIllXZQojARwYWlklGhHSwCMB25vLCB5ZXOUiWVdlCiMCmFjdGl2
aXRpZXOUaEdLAIwHbm8sIHllc5SJZV2UKIwHbnVyc2VyeZRoR0sAjAdubywgeWVzlIllXZQojAZo
aWdoZXKUaEdLAIwHbm8sIHllc5SJZV2UKIwIaW50ZXJuZXSUaEdLAIwHbm8sIHllc5SJZV2UKIwI
cm9tYW50aWOUaEdLAIwHbm8sIHllc5SJZV2UKIwGZmFtcmVslGhPSwBoDohlXZQojAhmcmVldGlt
ZZRoT0sAaA6IZV2UKIwFZ29vdXSUaE9LAGgOiGVdlCiMBERhbGOUaE9LAGgOiGVdlCiMBFdhbGOU
aE9LAGgOiGVdlCiMBmhlYWx0aJRoT0sAaA6IZV2UKIwIYWJzZW5jZXOUaE9LAGgOiGVdlCiMBnBh
c3NlZJRoR0sAjAdubywgeWVzlIllZXNoNUsBdYwKYXR0cmlidXRlc5QojAZzY2hvb2yUXZQojAJH
UJSMAk1TlGWGlIwDc2V4lF2UKIwBRpSMAU2UZYaUjANhZ2WUSwKGlIwHYWRkcmVzc5RdlCiMAVKU
jAFVlGWGlIwHZmFtc2l6ZZRdlCiMA0dUM5SMA0xFM5RlhpSMB1BzdGF0dXOUXZQojAFBlIwBVJRl
hpSMBE1lZHWUSwKGlIwERmVkdZRLAoaUjARNam9ilF2UKIwHYXRfaG9tZZSMBmhlYWx0aJSMBW90
aGVylIwIc2VydmljZXOUjAd0ZWFjaGVylGWGlIwERmpvYpRdlCiMB2F0X2hvbWWUjAZoZWFsdGiU
jAVvdGhlcpSMCHNlcnZpY2VzlIwHdGVhY2hlcpRlhpSMBnJlYXNvbpRdlCiMBmNvdXJzZZSMBGhv
bWWUjAVvdGhlcpSMCnJlcHV0YXRpb26UZYaUjAhndWFyZGlhbpRdlCiMBmZhdGhlcpSMBm1vdGhl
cpSMBW90aGVylGWGlIwKdHJhdmVsdGltZZRLAoaUjAlzdHVkeXRpbWWUSwKGlIwIZmFpbHVyZXOU
SwKGlIwJc2Nob29sc3VwlF2UKIwCbm+UjAN5ZXOUZYaUjAZmYW1zdXCUXZQojAJub5SMA3llc5Rl
hpSMBHBhaWSUXZQojAJub5SMA3llc5RlhpSMCmFjdGl2aXRpZXOUXZQojAJub5SMA3llc5RlhpSM
B251cnNlcnmUXZQojAJub5SMA3llc5RlhpSMBmhpZ2hlcpRdlCiMAm5vlIwDeWVzlGWGlIwIaW50
ZXJuZXSUXZQojAJub5SMA3llc5RlhpSMCHJvbWFudGljlF2UKIwCbm+UjAN5ZXOUZYaUjAZmYW1y
ZWyUSwKGlIwIZnJlZXRpbWWUSwKGlIwFZ29vdXSUSwKGlIwERGFsY5RLAoaUjARXYWxjlEsChpSM
BmhlYWx0aJRLAoaUjAhhYnNlbmNlc5RLAoaUjAZwYXNzZWSUXZQojAJub5SMA3llc5RlhpR0lIwF
bWV0YXOUKYwKY2xhc3NfdmFyc5QpjBJtb2RpZmllZF92YXJpYWJsZXOUXZR1YmF1Lg==
</properties>
		<properties node_id="3" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 2, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01o\x00\x00\x00r\x00\x00\x04\x90\x00\x00\x02\xd0\x00\x00\x01p\x00\x00\x00\x90\x00\x00\x04\x8f\x00\x00\x02\xcf\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x01p\x00\x00\x00\x90\x00\x00\x04\x8f\x00\x00\x02\xcf', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import numpy as np\nfrom Orange.data import Table, Domain, ContinuousVariable, DiscreteVariable\n\ndomain = Domain([ContinuousVariable("age"),\n                 ContinuousVariable("height"),\n                 DiscreteVariable("gender", values=("M", "F"))])\narr = np.array([\n  [25, 186, 0],\n  [30, 164, 1]])\nout_data = Table.from_numpy(domain, arr)\n', 'filename': None}, {'name': 'New script', 'script': 'import numpy as np\nimport pandas as pd\nfrom mlxtend.frequent_patterns import apriori, association_rules\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\n\n# Load data from Orange input (dataset connected from File widget)\ndata = in_data\n\n# Convert Orange Table to pandas DataFrame\ndf = pd.DataFrame(data.X, columns=[v.name for v in data.domain.attributes])\n\n# Ensure data is boolean (as required by Apriori)\ndf = df.astype(bool)\n\n# Apply Apriori algorithm\nfrequent_itemsets = apriori(df, min_support=0.1, use_colnames=True)\n\n# Generate association rules\nrules = association_rules(frequent_itemsets, metric="confidence", min_threshold=0.5)\n\n# Prepare data for Orange output\n# We\'ll output \'support\', \'confidence\', and \'lift\'\ndomain = Domain([\n    ContinuousVariable("support"),\n    ContinuousVariable("confidence"),\n    ContinuousVariable("lift")\n], metas=[StringVariable("antecedents"), StringVariable("consequents")])\n\n# Convert to numpy arrays for Orange Table\nX = rules[[\'support\', \'confidence\', \'lift\']].to_numpy()\nmetas = np.column_stack([\n    rules[\'antecedents\'].astype(str),\n    rules[\'consequents\'].astype(str)\n])\n\n# Create Orange Table for output\nout_data = Table(domain, X, metas)\n\nprint("Association rules generated and sent to next widget!")\n', 'filename': None}, {'name': 'New script', 'script': 'import numpy as np\nimport pandas as pd\nfrom mlxtend.frequent_patterns import apriori, association_rules\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\n\n# Load data from Orange input (dataset connected from File widget)\ndata = in_data\n\n# Convert Orange Table to pandas DataFrame\ndf = pd.DataFrame(data.X, columns=[v.name for v in data.domain.attributes])\n\n# Ensure data is boolean (as required by Apriori)\ndf = df.astype(bool)\n\n# Apply Apriori algorithm\nfrequent_itemsets = apriori(df, min_support=0.1, use_colnames=True)\n\n# Generate association rules\nrules = association_rules(frequent_itemsets, metric="confidence", min_threshold=0.5)\n\n# Prepare data for Orange output\n# We\'ll output \'support\', \'confidence\', and \'lift\'\ndomain = Domain([\n    ContinuousVariable("support"),\n    ContinuousVariable("confidence"),\n    ContinuousVariable("lift")\n], metas=[StringVariable("antecedents"), StringVariable("consequents")])\n\n# Convert to numpy arrays for Orange Table\nX = rules[[\'support\', \'confidence\', \'lift\']].to_numpy()\nmetas = np.column_stack([\n    rules[\'antecedents\'].astype(str),\n    rules[\'consequents\'].astype(str)\n])\n\n# Create Orange Table for output\nout_data = Table(domain, X, metas)\n\nprint("Association rules generated and sent to next widget!")\n', 'filename': None}], 'scriptText': 'import numpy as np\nimport pandas as pd\nfrom mlxtend.frequent_patterns import apriori, association_rules\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\n\n# Load data from Orange input (dataset connected from File widget)\n\ndata = in_data\n\n# Convert Orange Table to pandas DataFrame\ndf = pd.DataFrame(data.X, columns=[v.name for v in data.domain.attributes])\n\n# Ensure data is boolean (as required by Apriori)\ndf = df.astype(bool)\n\n# Apply Apriori algorithm\nfrequent_itemsets = apriori(df, min_support=0.1, use_colnames=True)\n\n# Generate association rules\nrules = association_rules(frequent_itemsets, metric="confidence", min_threshold=0.5)\n\n# Prepare data for Orange output\n# We\'ll output \'support\', \'confidence\', and \'lift\'\ndomain = Domain([\n    ContinuousVariable("support"),\n    ContinuousVariable("confidence"),\n    ContinuousVariable("lift")\n], metas=[StringVariable("antecedents"), StringVariable("consequents")])\n\n# Convert to numpy arrays for Orange Table\nX = rules[[\'support\', \'confidence\', \'lift\']].to_numpy()\nmetas = np.column_stack([\n    rules[\'antecedents\'].astype(str),\n    rules[\'consequents\'].astype(str)\n])\n\n# Create Orange Table for output\nout_data = Table(domain, X, metas)\n\nprint("Association rules generated and sent to next widget!")\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xa1\x00\x00\x00a\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="4" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01o\x00\x00\x00\x98\x00\x00\x04\x90\x00\x00\x02\xaa\x00\x00\x01p\x00\x00\x00\xb6\x00\x00\x04\x8f\x00\x00\x02\xa9\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x01p\x00\x00\x00\xb6\x00\x00\x04\x8f\x00\x00\x02\xa9', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="5" format="pickle">gASVaAMAAAAAAAB9lCiMDWF0dHJfeF9pc19hYnOUiYwNYXR0cl95X2lzX2Fic5SJjAthdXRvX2Nv
bW1pdJSIjAthdXRvX3NhbXBsZZSIjBJjb250cm9sQXJlYVZpc2libGWUiIwTc2F2ZWRXaWRnZXRH
ZW9tZXRyeZRDQgHZ0MsAAwAAAAAA/wAAAHIAAAUAAAAC0AAAAQAAAACQAAAE/wAAAs8AAAAAAAAA
AAYAAAABAAAAAJAAAAT/AAACz5SMCXNlbGVjdGlvbpROjBF0b29sdGlwX3Nob3dzX2FsbJSIjA92
aXN1YWxfc2V0dGluZ3OUfZSMBWdyYXBolH2UKIwLYWxwaGFfdmFsdWWUS4CMDWNsYXNzX2RlbnNp
dHmUiYwRaml0dGVyX2NvbnRpbnVvdXOUiYwLaml0dGVyX3NpemWUSwCME2xhYmVsX29ubHlfc2Vs
ZWN0ZWSUiYwWb3J0aG9ub3JtYWxfcmVncmVzc2lvbpSJjAtwb2ludF93aWR0aJRLCowMc2hvd19l
bGxpcHNllImMCXNob3dfZ3JpZJSJjAtzaG93X2xlZ2VuZJSIjA1zaG93X3JlZ19saW5llIl1jAtf
X3ZlcnNpb25fX5RLBYwQY29udGV4dF9zZXR0aW5nc5RdlIwVb3Jhbmdld2lkZ2V0LnNldHRpbmdz
lIwHQ29udGV4dJSTlCmBlH2UKIwGdmFsdWVzlH2UKIwKYXR0cl9jb2xvcpROSv7///+GlIwKYXR0
cl9sYWJlbJROSv7///+GlIwKYXR0cl9zaGFwZZROSv7///+GlIwJYXR0cl9zaXpllE5K/v///4aU
jAZhdHRyX3iUjANBZ2WUS2aGlIwMYXR0cl94X2xvd2VylE5K/v///4aUjAxhdHRyX3hfdXBwZXKU
Tkr+////hpSMBmF0dHJfeZSMCk1hdGhfU2NvcmWUS2aGlIwMYXR0cl95X2xvd2VylE5K/v///4aU
jAxhdHRyX3lfdXBwZXKUTkr+////hpRoDH2UaBlLBXWMCmF0dHJpYnV0ZXOUfZQoaCxLAmgzSwKM
DVNjaWVuY2VfU2NvcmWUSwKMDUVuZ2xpc2hfU2NvcmWUSwKMB0F2ZXJhZ2WUSwJ1jAVtZXRhc5R9
lCiMBE5hbWWUSwOMBkdlbmRlcpRLA3V1YmF1Lg==
</properties>
	</node_properties>
	<session_state>
		<window_groups />
	</session_state>
</scheme>
